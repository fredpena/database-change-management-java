services:
  traefik:
    image: "traefik:v3.4"
    command:
      - "--api.insecure=true"                # Panel de control
      - "--providers.docker=true"            # Descubre los contenedores automáticamente
      - "--entrypoints.web.address=:80"      # Expone el puerto 80
    ports:
      - "80:80"
      - "8080:8080"                          # Dashboard de Traefik
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  postgres_workshop:
    image: postgres:15
    volumes:
      - db_postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=workshop_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  flyway:
    image: flyway/flyway:11.10.2 # Usa la imagen oficial de Flyway
    command: >           # Ejecuta el comando 'migrate'
      -url=jdbc:postgresql://postgres_workshop:5432/workshop_db
      -user=postgres
      -password=postgres
      -locations=filesystem:/flyway/sql
      migrate
    volumes:
      - ./src/main/resources/db/migration:/flyway/sql # Monta los scripts SQL en el contenedor
    depends_on:
      # Ahora depende de que el servicio esté "saludable", no solo iniciado.
      postgres_workshop:
        condition: service_healthy

  app:
    build: .
    depends_on:
      flyway:
        condition: service_completed_successfully
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=PathPrefix(`/`)"
      - "traefik.http.routers.app.entrypoints=web"
      - "traefik.http.services.app.loadbalancer.server.port=8080"
      - "traefik.http.services.app.loadbalancer.sticky.cookie=true"
    expose:
      - "8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres_workshop:5432/workshop_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - vaadin.productionMode=true

volumes:
  db_postgres: